{"version":3,"sources":["components/FileExplorer/FilesExplorer.module.css","interfaces/interfaces.ts","dal/fileAPI.ts","dal/constants.ts","bll/action-creators/fileThunks.ts","bll/hooks/useTypedSelector.ts","material-styling/material-styling.tsx","components/FileExplorer/FilesExplorer.tsx","App.tsx","bll/reducers/fileReducer.ts","bll/reducers/index.ts","bll/store/index.ts","index.tsx"],"names":["module","exports","FileActions","instance","axios","create","baseURL","headers","fileAPI","get","id","recursiveDataImport","obj","data","neededId","children","i","length","useTypedSelector","useSelector","useTreeItemStyles","makeStyles","theme","createStyles","root","color","palette","text","secondary","backgroundColor","action","hover","grey","content","borderTopRightRadius","spacing","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","marginLeft","paddingLeft","expanded","selected","label","labelRoot","display","alignItems","padding","labelIcon","marginRight","labelText","flexGrow","StyledTreeItem","props","classes","LabelIcon","other","labelInfo","bgColor","TreeItem","className","Typography","variant","useStyles","height","maxWidth","FilesExplorer","dispatch","useDispatch","files","state","useState","arrayCheck","setArrayCheck","setExpanded","useEffect","a","type","FETCH_DATA","payload","console","log","checkIfFetched","includes","getState","FETCH_DATA_BY_ID","collapseHandler","str","toString","newExp","filter","elem","rootClick","styling","files_explorer","TreeView","defaultCollapseIcon","defaultExpandIcon","renderTree","nodes","icon","title","split","PermMediaIcon","FolderIcon","nodeId","onClick","neededTitle","Array","isArray","map","node","App","initialState","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ddb15d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"files_explorer\":\"FilesExplorer_files_explorer__28A9-\"};","export interface IElementStructureItem {\n  id: number;\n  title: string;\n  children?: IElementStructureItem[];\n}\n\nexport enum FileActions {\n  FETCH_DATA = \"FETCH_DATA\",\n  FETCH_DATA_BY_ID = \"FETCH_DATA_BY_ID\",\n}\n\ntype FetchDataAction = {\n  type: FileActions.FETCH_DATA;\n  payload: IElementStructureItem;\n};\n\ntype FetchDataByIdAction = {\n  type: FileActions.FETCH_DATA_BY_ID;\n  payload: IElementStructureItem;\n};\n\nexport type FileActionTypes = FetchDataAction | FetchDataByIdAction;\n","import axios from \"axios\";\r\nimport { BASEURL } from \"./constants\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASEURL,\r\n  headers: {\r\n    'Access-Control-Allow-Headers': '*',\r\n    'Content-Type': 'application/json'\r\n  }\r\n\r\n});\r\n\r\nexport const fileAPI = {\r\n  getData() {\r\n    return instance.get(``);\r\n  },\r\n  getDataById(id: number) {\r\n    return instance.get(`?dirId=${id}`);\r\n  },\r\n};\r\n","export const BASEURL = \"http://164.90.161.80:3000/api/content\";\r\n","import { Dispatch } from \"redux\";\r\nimport { RootState } from \"../store\";\r\nimport { fileAPI } from \"../../dal/fileAPI\";\r\nimport {\r\n  FileActions,\r\n  IElementStructureItem,\r\n} from \"../../interfaces/interfaces\";\r\n\r\nexport const fetchData = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const { data } = await fileAPI.getData();\r\n    dispatch({ type: FileActions.FETCH_DATA, payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nlet recursiveDataImport = (\r\n  obj: IElementStructureItem,\r\n  data: IElementStructureItem,\r\n  neededId: number\r\n) => {\r\n  if (!obj.children) {\r\n    return;\r\n  }\r\n  if (obj.id === neededId) {\r\n    obj.children = data.children;\r\n    return;\r\n  }\r\n  for (let i = 0; i < obj.children.length; i++) {\r\n    recursiveDataImport(obj.children[i], data, neededId);\r\n  }\r\n};\r\n\r\nexport const fetchDataById =\r\n  (id: number) => async (dispatch: Dispatch, getState: () => RootState) => {\r\n    const files = getState().files;\r\n    try {\r\n      const { data } = await fileAPI.getDataById(id);\r\n      recursiveDataImport(files, data, id);\r\n      dispatch({ type: FileActions.FETCH_DATA_BY_ID, payload: data });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TreeItem, { TreeItemProps } from \"@material-ui/lab/TreeItem\";\r\nimport React from \"react\";\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.text.secondary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        backgroundColor: `${theme.palette.grey[400]})`,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\":\r\n      {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.secondary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 20,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0.5, 0),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"inherit\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport function StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: 264,\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n","import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchData, fetchDataById } from \"../../bll/action-creators/fileThunks\";\r\nimport { useTypedSelector } from \"../../bll/hooks/useTypedSelector\";\r\nimport { IElementStructureItem } from \"../../interfaces/interfaces\";\r\nimport { StyledTreeItem, useStyles } from \"../../material-styling/material-styling\";\r\nimport styling from './FilesExplorer.module.css';\r\n\r\nconst FilesExplorer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  // data\r\n  const files = useTypedSelector(state => state.files)\r\n\r\n  // an array to check if specific data was fetched or not\r\n  const [arrayCheck, setArrayCheck] = useState<number[]>([])\r\n\r\n  // an array to handle folder collapsing with material-ui\r\n  const [expanded, setExpanded] = useState<string[]>(['0']);\r\n\r\n  // material-ui styles\r\n  const classes = useStyles();\r\n\r\n\r\n  // fetching root object with first render\r\n  useEffect(() => {\r\n    dispatch(fetchData())\r\n  }, [dispatch])\r\n\r\n\r\n  // function with checks if an element needed to be fetched\r\n  const onClickFetch = (neededId: number, neededTitle: string) => {\r\n\r\n    // check if ID is rootID and handle rootID in *expanded* array\r\n    if (neededId === 0) rootClick()\r\n\r\n    // check if an element is a file and returns from a function if true\r\n    if (neededTitle.split('.').length > 1 || neededTitle === files.title) return\r\n\r\n    // function that prevents meaningless queries\r\n    checkIfFetched(neededId)\r\n\r\n    // updating state for collapses (handling *expanded* attribute of material-ui in render)\r\n    collapseHandler(neededId)\r\n\r\n  }\r\n\r\n  const checkIfFetched = (neededId: number) => {\r\n    if (!arrayCheck.includes(neededId)) {\r\n      setArrayCheck([...arrayCheck, neededId])\r\n      dispatch(fetchDataById(neededId))\r\n    }\r\n  }\r\n\r\n  const collapseHandler = (neededId: number) => {\r\n    let str = neededId.toString()\r\n\r\n    if (expanded.includes(str)) {\r\n      let newExp = expanded.filter(elem => elem !== str)\r\n      setExpanded([...newExp])\r\n    } else {\r\n      setExpanded([...expanded, str])\r\n    }\r\n  }\r\n\r\n  const rootClick = () => {\r\n    if (expanded.includes('0')) {\r\n      let newExp = expanded.filter(elem => elem !== '0')\r\n      setExpanded([...newExp])\r\n    } else {\r\n      setExpanded([...expanded, '0'])\r\n    }\r\n  }\r\n\r\n  // recursive custom styled nodes\r\n  const renderTree = (nodes: IElementStructureItem) => {\r\n    let icon = nodes.title.split('.').length > 1 ? PermMediaIcon : FolderIcon\r\n    return <StyledTreeItem bgColor=\"#e8f0fe\" labelIcon={icon}\r\n      key={nodes.id} nodeId={nodes.id.toString()} labelText={nodes.title} onClick={() => onClickFetch(nodes.id, nodes.title)}>\r\n      {Array.isArray(nodes.children) ? nodes.children.map((node: any) => renderTree(node)) : null}\r\n    </StyledTreeItem>\r\n  };\r\n\r\n  return (\r\n    <div className={styling.files_explorer}>\r\n      <TreeView\r\n        expanded={expanded}\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n      >\r\n        {renderTree(files)}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilesExplorer;\r\n","import React from 'react';\nimport FilesExplorer from './components/FileExplorer/FilesExplorer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FilesExplorer/>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FileActions,\r\n  FileActionTypes,\r\n  IElementStructureItem,\r\n} from \"../../interfaces/interfaces\";\r\n\r\nconst initialState: IElementStructureItem = {\r\n  id: 0,\r\n  title: \"\",\r\n  children: [],\r\n};\r\n\r\nexport const fileReducer = (\r\n  state = initialState,\r\n  action: FileActionTypes\r\n): IElementStructureItem => {\r\n  switch (action.type) {\r\n    case FileActions.FETCH_DATA:\r\n      return {\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        children: action.payload.children,\r\n      };\r\n    case FileActions.FETCH_DATA_BY_ID:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { fileReducer } from \"./fileReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    files: fileReducer,\r\n})","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from \"../reducers\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}